문제


리스트를 사용하여 정수를 저장하는 스택을 구현하고, 입력으로 주어지는 명령을 처리하는 프로그램을 완성 해 보세요.

push N : 스택에 정수 N을 저장한다.
pop : 스택에서 저장되어있는 정수를 빼내고, 해당 값을 출력한다.
top : 스택의 가장 위에 있는 정수를 출력한다.
bottom : 스택의 가장 아래에 있는 정수를 출력한다.

첫 번째 시도와 문제점 몇가지
while(1):
    a,b=input().split() #나눠서 받을 시 다른 명령어를 받을 수 없게됨
    stack=[] #리스트를 반복문 안에 넣을 시 명령어가 한 번 입력 될때마다 초기화돼서 계속 하나의 값만 가질 수 있게 됨
    if a=='push':
        stack.append(a)
    elif a=='top':
        print(stack[-1])
    elif a=='bottom':
        print(stack[0])
    elif a=='pop':
        print(stack[-1]) #pop은 맨끝에 수를 출력하고 그 값이 삭제되는 기능이 있어야함



2.최종

stack = []#리스트를 반복문 안에 넣을 시 명령어가 한 번 입력 될때마다 초기화돼서 계속 하나의 값만 가질 수 있게 됨

while(1): #명령어 입력시 출력 코드가 포함 되어 있으므로 중단 조건은 따로 필요없음
    a=input()

    if 'push' in a: # *** 이런식으로 작성하면 push와 값을 같이 받을 수 있는 하나의 케이스를 만들 수 있음
        stack.append(a.split(" ")[1]) # *****공백으로 나눠서 받을때 두번째[1]값을 리스트에 입력*****
    elif a=='top':
        print(stack[-1]) #리스트 마지막 값 출력
    elif a=='bottom':
        print(stack[0]) #리스트 첫 번째 값 출력
    elif a=='pop':
        print(stack.pop()) #pop명령어로 pop기능을 수행할 수 있음 값이 출력되고 삭제됨

#리스트길이는 len(stack)으로 하면 구할 수 있는데 pop에서 스택이 비었을 때 경고메시지를 출력하는 코드를 넣을 시 마지막 값을 출력하자마자 경고 메시지가 출력됨
