# python_practice
#방향성 없는 그래프 - 인접 행렬 코드
nd_graph = []
for r in range(9): #row를 9개 생성하기 위한 반복문
  e_list=[]#row를 표현할 빈 리스트 생성
  for c in range(9): #column을 9개 생성하기 위한 반복문
    e_list.append(0) #갈 수 없다고 마킹
  nd_graph.append(e_list) #row를 추가

nd_graph[0][1]=1
nd_graph[0][2]=1
nd_graph[1][0]=1
nd_graph[1][2]=1
nd_graph[1][3]=1
nd_graph[2][0]=1
nd_graph[2][1]=1
nd_graph[2][4]=1
nd_graph[3][1]=1
nd_graph[3][6]=1
nd_graph[4][2]=1
nd_graph[4][5]=1
nd_graph[4][6]=1
nd_graph[4][7]=1
nd_graph[5][4]=1
nd_graph[6][3]=1
nd_graph[6][4]=1
nd_graph[6][8]=1
nd_graph[7][4]=1
nd_graph[8][6]=1

for row in nd_graph:
  for col in row:
    print(col,end='  ')
  print()

#딕셔너리로 그래프를 표현 - 방향성 없는 그래프
nd_graph2 = {}
nd_graph2[0] =[1,2]
nd_graph2[1] =[0,2,3]
nd_graph2[2] =[0,1,4]
nd_graph2[3] =[1,6]
nd_graph2[4] =[2,5,6,7]
nd_graph2[5] =[4]
nd_graph2[6] =[3,8]
nd_graph2[7] =[4]
nd_graph2[8] =[6]
print(nd_graph2)

#  인접행렬로 방향성 있는 그래프
d_graph = []
for r in range(9): #row를 9개 생성하기 위한 반복문
  e_list=[]#row를 표현할 빈 리스트 생성
  for c in range(9): #column을 9개 생성하기 위한 반복문
    e_list.append(0) #갈 수 없다고 마킹
  d_graph.append(e_list) #row를 추가

d_graph[0][1]=1
d_graph[0][2]=1
d_graph[1][2]=1
d_graph[1][3]=1
d_graph[2][4]=1
d_graph[3][6]=1
d_graph[4][5]=1
d_graph[4][6]=1
d_graph[4][7]=1
d_graph[6][8]=1

for row in d_graph:
  for col in row:
    print(col,end='  ')
  print()

#딕셔너리로 방향성 있는 그래프 표현(입력수 보다 높은 수 삭제한거)
d_graph2 = {}
d_graph2[0] =[1,2]
d_graph2[1] =[2,3]
d_graph2[2] =[4]
d_graph2[3] =[6]
d_graph2[4] =[5,6,7]
d_graph2[5] =[]
d_graph2[6] =[8]
d_graph2[7] =[]
d_graph2[8] =[]
print(d_graph2)

